<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
    <groupId>ikube</groupId>
	<artifactId>ikube-web</artifactId>
    <version>5.3.1</version>
	<packaging>war</packaging>

    <scm>
        <url>https://github.com/michaelcouck/ikube</url>
        <connection>scm:git:ssh://github.com/michaelcouck/ikube.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/michaelcouck/ikube.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <site>
            <id>ikube-releases</id>
            <name>ikube-releases</name>
            <url>file:/home/michael/.m2/repository</url>
        </site>
        <repository>
            <id>libs-release-local</id>
            <name>libs-release-local</name>
            <url>http://ikube.be/artifactory/libs-release-local</url>
        </repository>
        <snapshotRepository>
            <id>libs-snapshot-local</id>
            <name>libs-snapshot-local</name>
            <url>http://ikube.be/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

	<properties>
		<webapps>webapps</webapps>
		<final.name>${project.build.finalName}.${project.packaging}</final.name>
		<maven.build.timestamp.format>dd-MM-yyyy HH:mm:ss</maven.build.timestamp.format>
        <version>9.4.12.v20180830</version>
	</properties>

	<build>
	    <finalName>ikube-web</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<!-- The default plugin for creating the war, we specify a version. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
			</plugin>

			<!--
				This plugin starts a Jetty server before the integration tests and stops it after the 
				integration tests. It can also be used to start a jetty server from the command line for testing. 
			-->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty-version}</version>
				<configuration>
					<stopKey>stop</stopKey>
					<stopPort>9180</stopPort>
                    <scanIntervalSeconds>10000</scanIntervalSeconds>
                    <webApp>
                        <contextPath>/ikube</contextPath>
                    </webApp>
                    <connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>9090</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
                    <jvmArgs>-XX:PermSize=256m -XX:MaxPermSize=512m -Xms1024m -Xmx2048m -XX:+CMSClassUnloadingEnabled</jvmArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty-version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${jetty-version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>example-jetty-embedded</artifactId>
            <version>${jetty-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.34</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

</project>